version: '3'
services:

    #PHP Service
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: digitalocean.com/php
        container_name: app
        restart: unless-stopped
        tty: true
        environment:
            XDEBUG_CONFIG: remote_host=192.168.0.4
            PHP_IDE_CONFIG: serverName=Docker
            SERVICE_NAME: app
            SERVICE_TAGS: dev
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./dockerconfigs/php/local.ini:/usr/local/etc/php/conf.d/local.ini
            - ./dockerconfigs/php/docker-php-ext-xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
        networks:
            - app-network

    #Nginx Service
    nginx:
        image: nginx:alpine
        container_name: nginx
        restart: unless-stopped
        tty: true
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./:/var/www
            - ./dockerconfigs/nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - app-network

    #MySQL Service
    db:
        image: mysql:5.7.22
        container_name: db
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: hypdodb
            MYSQL_USER: admin
            MYSQL_PASSWORD: admin
            MYSQL_ROOT_PASSWORD: hyhype
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - dbdata:/var/lib/mysql/
            - ./dockerconfigs/mysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - app-network
    redis:
        image: redis:alpine
        container_name: redis
        command: redis-server
        volumes:
            - ./data/redis:/data
        ports:
            - "6379:6379"
        networks:
            - app-network

#Docker Networks
networks:
    app-network:
        driver: bridge
#Volumes
volumes:
    dbdata:
        driver: local
